openapi: 3.0.3
info:
  title: Vaccination app example
  description: >-
    Some useful links:

    - [Vaccination app
    repository](https://github.com/estebanfex/vaccinationApp)
  contact:
    email: estebanfex@gmail.com
  license:
    name: GNU
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.0
servers:
  - url: http://localhost:5000/
tags:
  - name: user
    description: Operations about vaccination list
paths:
  /newuser:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by administrator user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNew'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNew'
        '400':
          description: Invalid data supplied
        '415':
          description: Request must be JSON
  /vaccine:
    post:
      tags:
        - user
      summary: Create a vaccination entry
      description: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Vaccines'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccines'
        '400':
          description: Invalid data supplied
        '415':
          description: Request must be JSON
  /user:
    get:
      tags:
        - user
      summary: Get user information
      description: ''
      operationId: loginUser
      parameters:
        - name: cedula
          in: query
          description: valid number
          required: true
          schema:
            type: string
        - name:  nombre
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  apellido
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  correo
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  nacimiento
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  domicilio
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  telefono
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
        - name:  numvacunas
          in: query
          description: Set to one for request
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                type: string
        '400':
          description: Invalid data supplied
        '404':
          description: Data not found
  /update:
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by employee user.
      operationId: updateUser
      parameters:
        - name: cedula
          in: query
          description: user to be updated
          required: true
          schema:
            type: string
        - name:  nacimiento
          in: query
          description: date dd-mm-yyyy
          required: false
          schema:
            type: string
        - name:  domicilio
          in: query
          description: Set the address
          required: false
          schema:
            type: string
        - name:  telefono
          in: query
          description: phone number
          required: false
          schema:
            type: string
      requestBody:
        description: Update an existent user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedData'
      responses:
        '201':
            description: updated data
        '400':
          description: Invalid data supplied
        '415':
          description: Request must be JSON
  /delete:
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by manager user.
      operationId: deleteUser
      parameters:
        - name: cedula
          in: query
          description: The user that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '201':
          description: User deleted
        '400':
          description: Invalid data supplied
        '404':
          description: User not found
components:
  schemas:
    UserNew:
      type: object
      properties:
        cedula:
          type: integer
          format: int64
          example: 1713175071
        nombre:
          type: string
          example: UserName
        apellido:
          type: string
          example: UserLastname
        correo:
          type: string
          example: correo@email.com
      xml:
        name: usernew
    User:
      type: object
      properties:
        cedula:
          type: integer
          format: int64
          example: 1713175071
        nombre:
          type: string
          example: UserName
        apellido:
          type: string
          example: UserLastname
        correo:
          type: string
          example: correo@email.com
        nacimiento:
          type: string
          example: 01-01-1990
        telefono:
          type: string
          example: 593996xxxxxx
        domiciio:
          type: string
          example: calle x Num y
        numvacunas:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
    UpdatedData:
      type: object
      properties:
        cedula:
          type: integer
          format: int64
          example: 1713175071
        vacuna:
          type: string
          example: Pfizer
        fecha:
          type: string
          example: 01-01-1990
      xml:
        name: updateddata
    Vaccines:
      type: object
      properties:
        cedula:
          type: integer
          format: int64
          example: 1713175071
        vacuna:
          type: string
          example: Pfizer
        fecha:
          type: string
          example: 01-01-1990
      xml:
        name: vaccines

  